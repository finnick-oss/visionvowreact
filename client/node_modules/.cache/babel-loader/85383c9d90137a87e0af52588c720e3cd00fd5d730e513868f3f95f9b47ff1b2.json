{"ast":null,"code":"var _jsxFileName = \"E:\\\\react project\\\\visionvow\\\\src\\\\status\\\\CompletedPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Complete.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompletedPage = ({\n  location\n}) => {\n  _s();\n  const [ipAddress, setIPAddress] = useState('');\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch('https://geolocation-db.com/json/').then(response => response.json()).then(data => {\n      setIPAddress(data.IPv4);\n    }).catch(error => console.log(error));\n  }, []);\n  useEffect(() => {\n    const searchParams = new URLSearchParams(location.search);\n    const pid = searchParams.get('pid');\n    const uid = searchParams.get('uid');\n    const status = 'Completed';\n    const completionTime = new Date().toISOString().slice(0, 10);\n    if (pid && uid && ipAddress) {\n      const newData = {\n        pid,\n        uid,\n        ip: ipAddress,\n        status,\n        completionTime // Include completionTime in newData\n      };\n      console.log('New Data:', newData);\n      setData(prevData => [...prevData, newData]);\n\n      // Send data to backend\n      fetch('http://localhost:8083/survey', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newData)\n      }).then(response => {\n        if (response.ok) {\n          console.log('Data saved successfully');\n        } else {\n          console.error('Failed to save data');\n        }\n      }).catch(error => {\n        console.error('Error saving data:', error);\n      });\n    }\n  }, [location.search, ipAddress]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"complete-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"complete-title\",\n      children: \"Completed Surveys\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"complete-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"complete-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Serial NO.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Project ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"User ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"IP Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Completion Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map((survey, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: survey.pid\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: survey.uid\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: survey.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: survey.ip\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: survey.completionTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(CompletedPage, \"ODGX7gmkem2JRNCT07Z/KBEL684=\");\n_c = CompletedPage;\nexport default CompletedPage;\nvar _c;\n$RefreshReg$(_c, \"CompletedPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CompletedPage","location","_s","ipAddress","setIPAddress","data","setData","fetch","then","response","json","IPv4","catch","error","console","log","searchParams","URLSearchParams","search","pid","get","uid","status","completionTime","Date","toISOString","slice","newData","ip","prevData","method","headers","body","JSON","stringify","ok","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","survey","index","_c","$RefreshReg$"],"sources":["E:/react project/visionvow/src/status/CompletedPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Complete.css';\r\n\r\nconst CompletedPage = ({ location }) => {\r\n  const [ipAddress, setIPAddress] = useState('');\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('https://geolocation-db.com/json/')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setIPAddress(data.IPv4);\r\n      })\r\n      .catch(error => console.log(error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const searchParams = new URLSearchParams(location.search);\r\n    const pid = searchParams.get('pid');\r\n    const uid = searchParams.get('uid');\r\n    const status = 'Completed';\r\n    const completionTime = new Date().toISOString().slice(0, 10);\r\n\r\n    if (pid && uid && ipAddress) {\r\n      const newData = {\r\n        pid,\r\n        uid,\r\n        ip: ipAddress,\r\n        status,\r\n        completionTime, // Include completionTime in newData\r\n      };\r\n\r\n      console.log('New Data:', newData);\r\n      setData(prevData => [...prevData, newData]);\r\n\r\n      // Send data to backend\r\n      fetch('http://localhost:8083/survey', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(newData)\r\n      })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          console.log('Data saved successfully');\r\n        } else {\r\n          console.error('Failed to save data');\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error saving data:', error);\r\n      });\r\n    }\r\n  }, [location.search, ipAddress]);\r\n\r\n  return (\r\n    <div className=\"complete-page\">\r\n      <h1 className=\"complete-title\">Completed Surveys</h1>\r\n      <div className=\"complete-table-container\">\r\n        <table className=\"complete-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Serial NO.</th>\r\n              <th>Project ID</th>\r\n              <th>User ID</th>\r\n              <th>Status</th>\r\n              <th>IP Address</th>\r\n              <th>Completion Time</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((survey, index) => (\r\n              <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td>{survey.pid}</td>\r\n                <td>{survey.uid}</td>\r\n                <td>{survey.status}</td>\r\n                <td>{survey.ip}</td>\r\n                <td>{survey.completionTime}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompletedPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}