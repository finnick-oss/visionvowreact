{"ast":null,"code":"var _jsxFileName = \"E:\\\\react project\\\\visionvow\\\\src\\\\statics\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  useEffect(() => {\n    fetch('http://localhost:8083/survey').then(response => response.json()).then(data => {\n      // Update state with fetched data\n      setData(data.reverse());\n    }).catch(error => console.log(error));\n  }, []); // Include ipAddress in the dependency array\n\n  // Logic to get current rows\n  const indexOfLastRow = currentPage * rowsPerPage;\n  const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n  const currentRows = data.slice(indexOfFirstRow, indexOfLastRow);\n\n  // Logic for changing page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid pt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"col-md-9 ms-sm-auto col-lg-10 px-md-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered table-hover table-sm text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Serial NO.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Project ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"User ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"IP Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Completion Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: currentRows.length > 0 ? currentRows.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.pid\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.uid\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.ip\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"6\",\n                children: \"No data available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n          \"aria-label\": \"Pagination\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"pagination justify-content-center\",\n            children: Array.from({\n              length: Math.ceil(data.length / rowsPerPage)\n            }, (_, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `page-item ${currentPage === index + 1 ? 'active' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => paginate(index + 1),\n                className: \"page-link\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"qKX4x/aEdLdJ9JrcHhkPajCq9xI=\");\n_c = Dashboard;\nexport default _c2 = withRouter(Dashboard);\nvar _c, _c2;\n$RefreshReg$(_c, \"Dashboard\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","withRouter","jsxDEV","_jsxDEV","Dashboard","_s","data","setData","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","fetch","then","response","json","reverse","catch","error","console","log","indexOfLastRow","indexOfFirstRow","currentRows","slice","paginate","pageNumber","className","children","scope","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","index","pid","uid","status","ip","date","colSpan","Array","from","Math","ceil","_","onClick","_c","_c2","$RefreshReg$"],"sources":["E:/react project/visionvow/src/statics/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './Dashboard.css';\r\n\r\nconst Dashboard = ({}) => {\r\n  const [data, setData] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8083/survey')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        // Update state with fetched data\r\n        setData(data.reverse());\r\n      })\r\n      .catch(error => console.log(error));\r\n  }, []); // Include ipAddress in the dependency array\r\n\r\n  // Logic to get current rows\r\n  const indexOfLastRow = currentPage * rowsPerPage;\r\n  const indexOfFirstRow = indexOfLastRow - rowsPerPage;\r\n  const currentRows = data.slice(indexOfFirstRow, indexOfLastRow);\r\n\r\n  // Logic for changing page\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div className=\"container-fluid pt-5\">\r\n      <div className=\"row\">\r\n        <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\r\n          {/* Rest of your component code */}\r\n          {/* Table to display data */}\r\n          <table className=\"table table-bordered table-hover table-sm text-center\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Serial NO.</th>\r\n                <th scope=\"col\">Project ID</th>\r\n                <th scope=\"col\">User ID</th>\r\n                <th scope=\"col\">Status</th>\r\n                <th scope=\"col\">IP Address</th>\r\n                <th scope=\"col\">Completion Time</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {currentRows.length > 0 ? (\r\n                currentRows.map((item, index) => (\r\n                  <tr key={index}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{item.pid}</td>\r\n                    <td>{item.uid}</td>\r\n                    <td>{item.status}</td>\r\n                    <td>{item.ip}</td>\r\n                    <td>{item.date}</td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"6\">No data available</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n\r\n          {/* Pagination */}\r\n          <nav aria-label=\"Pagination\">\r\n            <ul className=\"pagination justify-content-center\">\r\n              {Array.from({ length: Math.ceil(data.length / rowsPerPage) }, (_, index) => (\r\n                <li key={index} className={`page-item ${currentPage === index + 1 ? 'active' : ''}`}>\r\n                  <button onClick={() => paginate(index + 1)} className=\"page-link\">\r\n                    {index + 1}\r\n                  </button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </nav>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Dashboard);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}